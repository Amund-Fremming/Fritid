{"ast":null,"code":"var _jsxFileName = \"/Users/AmundFremming/Documents/Personlig/Koding/web-frontend/drikkelek/src/pages/PlayGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../Base/Header\";\nimport Navbar from \"../Base/Navbar\";\nimport PlayPremade from \"../Components/PlayPremade\";\nimport { db } from \"../config/firebase\";\nimport { getDocs, collection } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayGame = props => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [names, setNames] = useState([]);\n  const [allNames, setAllNames] = useState([]);\n  const namesCollectionRef = collection(db, \"names\");\n  const questionsCollectionRef = collection(db, \"questions\");\n  const getQuestionsAndNames = async () => {\n    try {\n      // Gets and sets the questions\n      const questionsData = await getDocs(questionsCollectionRef);\n      const filteredQuestionsData = questionsData.docs.map(doc => ({\n        ...doc.data()\n      }));\n      setAllQuestions(filteredQuestionsData);\n\n      // Gets and sets the names\n      const namesData = await getDocs(namesCollectionRef);\n      const filteredNamesData = namesData.docs.map(doc => ({\n        ...doc.data()\n      }));\n      setAllNames(filteredNamesData);\n      setRoomQuestions();\n      setRoomNames();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const setRoomQuestions = () => {\n    const roomID = localStorage.getItem(\"gameID\");\n    const roomQuestions = [];\n    allQuestions.forEach(question => {\n      if (question.gameid == roomID) {\n        roomQuestions.push(question.question);\n      }\n    });\n    setQuestions(roomQuestions);\n  };\n  const setRoomNames = () => {\n    const roomID = localStorage.getItem(\"gameID\");\n    const roomNames = [];\n    allNames.forEach(name => {\n      if (name.gameid == roomID) {\n        roomNames.push(name.name);\n      }\n    });\n    setNames(roomNames);\n  };\n  useEffect(() => {\n    getQuestionsAndNames();\n    setRoomNames();\n    setQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-24 justify-center items-center flex\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"beer guy\",\n        src: require('../img/beerguy.png'),\n        className: \"w-72\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-center items-center flex mt-8\",\n      children: /*#__PURE__*/_jsxDEV(PlayPremade, {\n        names: names,\n        quesions: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PlayGame, \"J2873y/vcNGBis9V5MeCiM/8e6g=\");\n_c = PlayGame;\nexport default PlayGame;\nvar _c;\n$RefreshReg$(_c, \"PlayGame\");","map":{"version":3,"names":["React","useState","useEffect","Header","Navbar","PlayPremade","db","getDocs","collection","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayGame","props","_s","questions","setQuestions","allQuestions","setAllQuestions","names","setNames","allNames","setAllNames","namesCollectionRef","questionsCollectionRef","getQuestionsAndNames","questionsData","filteredQuestionsData","docs","map","doc","data","namesData","filteredNamesData","setRoomQuestions","setRoomNames","err","console","log","roomID","localStorage","getItem","roomQuestions","forEach","question","gameid","push","roomNames","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","alt","src","require","quesions","_c","$RefreshReg$"],"sources":["/Users/AmundFremming/Documents/Personlig/Koding/web-frontend/drikkelek/src/pages/PlayGame.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../Base/Header\";\nimport Navbar from \"../Base/Navbar\";\nimport PlayPremade from \"../Components/PlayPremade\";\nimport { db } from \"../config/firebase\";\nimport { getDocs, collection } from \"firebase/firestore\";\n\nconst PlayGame = (props) => {\n\n    const [questions, setQuestions] = useState([]);\n    const [allQuestions, setAllQuestions] = useState([]);\n    const [names, setNames] = useState([]);\n    const [allNames, setAllNames] = useState([]);\n\n    const namesCollectionRef = collection(db, \"names\");\n    const questionsCollectionRef = collection(db, \"questions\");\n\n    const getQuestionsAndNames = async () => {\n        try {\n\n            // Gets and sets the questions\n            const questionsData = await getDocs(questionsCollectionRef);\n            const filteredQuestionsData = questionsData.docs.map(doc => ({...doc.data()}));\n            \n            setAllQuestions(filteredQuestionsData);\n\n            // Gets and sets the names\n            const namesData = await getDocs(namesCollectionRef);\n            const filteredNamesData = namesData.docs.map(doc => ({...doc.data()}));\n\n            setAllNames(filteredNamesData);\n\n            setRoomQuestions();\n            setRoomNames();\n\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    const setRoomQuestions = () => {\n        const roomID = localStorage.getItem(\"gameID\");\n        \n        const roomQuestions = [];\n        allQuestions.forEach(question => {\n            if(question.gameid == roomID) {\n                roomQuestions.push(question.question);\n            }\n        });\n        setQuestions(roomQuestions);\n    }\n\n    const setRoomNames = () => {\n\n        const roomID = localStorage.getItem(\"gameID\");\n\n        const roomNames = [];\n        allNames.forEach(name => {\n            if(name.gameid == roomID) {\n                roomNames.push(name.name);\n            }\n        });\n        setNames(roomNames);\n    }\n\n    useEffect(() => {\n        getQuestionsAndNames();\n        setRoomNames();\n        setQuestions();\n    }, []);\n\n    return(\n        <>\n            <Header />\n\n            <div className=\"mt-24 justify-center items-center flex\">\n                <img alt=\"beer guy\" src={require('../img/beerguy.png')} className='w-72'/>    \n            </div>\n\n            <div className=\"justify-center items-center flex mt-8\">\n                <PlayPremade\n                    names={names}\n                    quesions={questions}\n                />\n            </div>\n\n            <Navbar />\n        </>\n    );\n}\n\nexport default PlayGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}