{"ast":null,"code":"import Premade from \"../storage/premade\";\nconst SpmLek = {\n  getPremadeGame(id) {\n    console.log(\"Starter getPremadeGame\");\n    let questions;\n    Premade.map(room => {\n      if (Number(room.id) == Number(id)) {\n        console.log(\"Funnet\");\n\n        // Convert the JSON data from room into an array of questions\n        questions = Object.values(room.questions);\n        // Convert questions to an array of the questions\n        questions = questions.map(question => question.question);\n        return room.questions;\n      }\n    });\n  }\n};\nexport default SpmLek;","map":{"version":3,"names":["Premade","SpmLek","getPremadeGame","id","console","log","questions","map","room","Number","Object","values","question"],"sources":["/Users/AmundFremming/Documents/Personlig/Koding/web-frontend/drikkelek/src/Util/SpmLek.js"],"sourcesContent":["import Premade from \"../storage/premade\";\n\nconst SpmLek =  {\n\n    getPremadeGame(id) {\n        console.log(\"Starter getPremadeGame\");\n\n        let questions;\n\n        Premade.map(room => {\n            if(Number(room.id) == Number(id)) {\n                console.log(\"Funnet\");\n\n                // Convert the JSON data from room into an array of questions\n                questions = Object.values(room.questions);\n                // Convert questions to an array of the questions\n                questions = questions.map(question => question.question);\n                \n\n                return room.questions;\n            }\n        });\n    },\n};\n\n\n\nexport default SpmLek;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AAExC,MAAMC,MAAM,GAAI;EAEZC,cAAcA,CAACC,EAAE,EAAE;IACfC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IAErC,IAAIC,SAAS;IAEbN,OAAO,CAACO,GAAG,CAACC,IAAI,IAAI;MAChB,IAAGC,MAAM,CAACD,IAAI,CAACL,EAAE,CAAC,IAAIM,MAAM,CAACN,EAAE,CAAC,EAAE;QAC9BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;;QAErB;QACAC,SAAS,GAAGI,MAAM,CAACC,MAAM,CAACH,IAAI,CAACF,SAAS,CAAC;QACzC;QACAA,SAAS,GAAGA,SAAS,CAACC,GAAG,CAACK,QAAQ,IAAIA,QAAQ,CAACA,QAAQ,CAAC;QAGxD,OAAOJ,IAAI,CAACF,SAAS;MACzB;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AAID,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}